name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Before Install
        run: chmod +x gradlew

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: |
            $HOME/.gradle/caches
            $HOME/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: "./gradlew clean build"

      - name: Prepare deployment
        run: |
          mkdir -p before-deploy
          cp scripts/*.sh before-deploy/
          cp appspec.yml before-deploy/
          cp build/libs/*.jar before-deploy/
          cd before-deploy && zip -r before-deploy *
          cd ../ && mkdir -p deploy
          mv before-deploy/before-deploy.zip deploy/donghyun_backend.zip
          ls deploy

      - name: Deploy to CodeDeploy
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-northeast-2
          application-name: $CODE_DEPLOY_APP_NAME
          deployment-group-name: $DEPLOYMENT_GROUP_NAME
          deployment-config-name: CodeDeployDefault.OneAtATime
          description: Deploying application
          wait-until-deployed: true

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./deploy/donghyun_backend.zip s3://dongh/donghyun_backend/donghyun_backend.zip

      # S3 버킷에 업로드 된 파일을 대상으로 CodeDeploy에서 배포 요청
      - name: Code Deploy
        run: aws deploy create-deployment --s3-location bucket=dongh,bundleType=zip,key=donghyun_backend/donghyun_backend.zip

      # CI 실행 완료 시 메일로 알람
      - name: Send notification
        if: always()
        uses: dawidd6/action-send-mail@v2
        with:
          body: success Deploy!!!
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: CI/CD Completed
          from: ${{ secrets.TO_EMAIL }}
          to: ${{ secrets.TO_EMAIL }}
